@function remove-nth($list, $index) {
  $result: null;

  @if type-of($index) != number { @warn "$index: #{quote($index)} is not a number for `remove-nth`."; }
  @else if $index == 0 { @warn "List index 0 must be a non-zero integer for `remove-nth`."; }
  @else if abs($index) > length($list) {
    @warn "List index is #{$index} but list is only #{length($list)} item long for `remove-nth`.";
  }

  @else {
    $result: ();
    $index: if($index < 0, length($list) + $index + 1, $index);

    @for $i from 1 through length($list) {
      @if $i != $index {
        $result: append($result, nth($list, $i));
      }
    }
  }

  @return $result;
}


@mixin flexy($input...) {

  // Load list
  @each $routine in $input {

      // Settings
      $action: null;
      $subAction: null;
      $subActionLength: null;
      $attribute: null;
      $lastItem: null;
      // Set action
      $action: nth($routine, 1);
      // Set details for each action
      $subAction: remove-nth($routine, 1);
      $subActionLength: length($subAction);

      // Typography
      @if $action == type {
        @include type($subaction);
      }

      // Hue
      @else if $action == hue {
        // If there is more than one item - set a last item
        @if ($subActionLength > 1) {
          $lastItem: nth($subaction, $subActionLength);
        }
        // Remove CSS Classes from end of list
        $subActionRemoveLast: remove-nth($subAction, $subActionLength);
        $attribute: $lastitem;

        @include hue($subActionRemoveLast, $attribute);
      }

  }

}
